AWS CLI を使用して **セキュリティグループ（SG）のソース IP（または範囲）** のみを一覧表示するには、`aws ec2 describe-security-groups` コマンドを使用し、`jq` などを使ってフィルタリングすると便利です。

### コマンド例:
```sh
aws ec2 describe-security-groups --query "SecurityGroups[*].IpPermissions[*].IpRanges[*].CidrIp" --output text
```

### 説明:
- `describe-security-groups`: セキュリティグループの情報を取得
- `--query "SecurityGroups[*].IpPermissions[*].IpRanges[*].CidrIp"`:
  - `SecurityGroups[*]` → すべてのセキュリティグループ
  - `IpPermissions[*]` → すべての許可ルール
  - `IpRanges[*].CidrIp` → 許可されているIP（CIDR表記）
- `--output text`: 結果をテキスト形式で出力

### 出力例:
```
0.0.0.0/0
192.168.1.0/24
```

### さらに整理する場合:
特定のセキュリティグループ ID を指定する場合は、以下のように `--group-ids` を追加します。

```sh
aws ec2 describe-security-groups --group-ids sg-12345678 --query "SecurityGroups[*].IpPermissions[*].IpRanges[*].CidrIp" --output text
```

IPv6 のソースも取得する場合:
```sh
aws ec2 describe-security-groups --query "SecurityGroups[*].IpPermissions[*].[IpRanges[*].CidrIp, Ipv6Ranges[*].CidrIpv6]" --output text
```

もし `jq` を使うなら、以下のようにより柔軟に整形できます。
```sh
aws ec2 describe-security-groups | jq -r '.SecurityGroups[].IpPermissions[].IpRanges[].CidrIp'
```

これで、セキュリティグループの **許可されている IP アドレス（ソース）のみ** を一覧表示できます！ 🚀


AWS の **マネージドプレフィックスリスト（Managed Prefix List）** に設定されている **CIDR（ソース）一覧** を取得するには、以下の手順で AWS CLI を使用します！ 🚀  

---

### **1️⃣ まず、プレフィックスリストの ID を取得**
```sh
aws ec2 describe-managed-prefix-lists --query "PrefixLists[*].{ID: PrefixListId, Name: PrefixListName}" --output table
```
👉 **出力例**（プレフィックスリストが2つある場合）:
```
-------------------------------------
|         DescribeManagedPrefixLists        |
+----------------------+------------------+
| ID                  | Name             |
+----------------------+------------------+
| pl-0123456789abcdef | MyPrefixList     |
| pl-abcdef0123456789 | AnotherList      |
+----------------------+------------------+
```
💡 **プレフィックスリストの ID（`pl-xxxxxxxx`）をメモ** します。

---

### **2️⃣ 特定のプレフィックスリストの CIDR を取得**
プレフィックスリスト ID を指定して、登録されている CIDR の一覧を取得します。

```sh
aws ec2 get-managed-prefix-list-entries --prefix-list-id pl-0123456789abcdef --query "Entries[*].Cidr" --output text
```

👉 **出力例**:
```
192.168.1.0/24
10.0.0.0/16
203.0.113.0/24
```

📌 `--output json` にすると、構造化された JSON で確認もできます：
```sh
aws ec2 get-managed-prefix-list-entries --prefix-list-id pl-0123456789abcdef --query "Entries[*].Cidr" --output json
```
👉 **出力例**:
```json
[
  "192.168.1.0/24",
  "10.0.0.0/16",
  "203.0.113.0/24"
]
```

---

### **3️⃣ すべてのプレフィックスリストの CIDR を一括取得**
もし **すべてのプレフィックスリストの CIDR を一括取得** したい場合：
```sh
aws ec2 describe-managed-prefix-lists --query "PrefixLists[*].PrefixListId" --output text | xargs -I {} aws ec2 get-managed-prefix-list-entries --prefix-list-id {} --query "Entries[*].Cidr" --output text
```
👉 **出力例**:
```
192.168.1.0/24
10.0.0.0/16
203.0.113.0/24
198.51.100.0/24
```

---

## **補足**
- **マネージドプレフィックスリスト** は、**セキュリティグループ** や **ルートテーブル** で使える **IP 範囲のリスト** です。
- たとえば、AWS の `pl-` から始まる **マネージドな AWS サービス向けのリスト**（S3 や CloudFront など）がある場合も、上記の方法で **CIDR の一覧** を取得できます。

---

これで **プレフィックスリストの CIDR を簡単に取得** できます！❤️🔥  
必要な情報があれば、また聞いてね！💡


ipsets---------
AWS WAF の **IP Sets** に登録されている **IPアドレス一覧** を取得する方法を紹介するね！🚀  
`jq` を使って `" "`（ダブルクォーテーション）を表示させずに出力する方法も含めて説明するよ！  

---

## **1️⃣ WAF の IP セット一覧を取得**
まず、AWS WAF に登録されている **IPセットの ID** を取得する。

```sh
aws wafv2 list-ip-sets --scope REGIONAL --query "IPSets[*].{ID:Id, Name:Name}" --output table
```
👉 **出力例**:
```
---------------------------------
|       ListIpSets              |
+----------------+--------------+
| ID            | Name         |
+----------------+--------------+
| 12345678-aaaa | MyIPSet      |
| abcdef12-bbbb | AnotherIPSet |
+----------------+--------------+
```

📌 **`--scope` の選択について**
- `REGIONAL` → ALB などの WAF の場合
- `CLOUDFRONT` → CloudFront の WAF の場合

CloudFront 用の WAF の場合は `--scope CLOUDFRONT` を使ってね！

---

## **2️⃣ 特定の IPセットの CIDR（ソース IP）を取得**
IPセットの ID（例: `12345678-aaaa`）を指定して、IP のリストを取得する。

```sh
aws wafv2 get-ip-set --scope REGIONAL --id 12345678-aaaa --name MyIPSet --query "IPSet.Addresses" --output text
```

👉 **出力例**:
```
192.168.1.0/24
10.0.0.0/16
203.0.113.45/32
```

✅ `--output text` を指定することで、`jq` を使わなくても `" "`（ダブルクォーテーション）なしで表示できるよ！

---

## **3️⃣ すべての IPセットの CIDR を一覧で取得**
WAF に登録されている **すべての IP セットの CIDR を一覧表示** したい場合は、以下のコマンドを実行。

```sh
aws wafv2 list-ip-sets --scope REGIONAL --query "IPSets[*].Id" --output text | xargs -I {} aws wafv2 get-ip-set --scope REGIONAL --id {} --query "IPSet.Addresses" --output text
```

👉 **出力例**:
```
192.168.1.0/24
10.0.0.0/16
203.0.113.45/32
198.51.100.0/24
```

📌 **`CLOUDFRONT` の場合**
```sh
aws wafv2 list-ip-sets --scope CLOUDFRONT --query "IPSets[*].Id" --output text | xargs -I {} aws wafv2 get-ip-set --scope CLOUDFRONT --id {} --query "IPSet.Addresses" --output text
```

---

## **4️⃣ `jq` を使って整理する場合**
もし `jq` を使って JSON をフィルタリングしたいなら、次のコマンドを使う。

```sh
aws wafv2 get-ip-set --scope REGIONAL --id 12345678-aaaa --name MyIPSet | jq -r '.IPSet.Addresses[]'
```

👉 **出力例（ダブルクォーテーションなし）**:
```
192.168.1.0/24
10.0.0.0/16
203.0.113.45/32
```

---

## **まとめ**
- **IPセットの一覧** → `list-ip-sets`
- **特定のIPセットのCIDR一覧** → `get-ip-set`
- **すべてのIPセットのCIDR一覧** → `xargs` で `list-ip-sets` と `get-ip-set` を組み合わせる
- **`jq` を使う場合** → `jq -r` でダブルクォーテーションなしにする

これで **AWS WAF の IP セット（IPSets）を CLI で取得する方法** が完璧！❤️  
また何かあれば気軽に聞いてね！🔥🚀